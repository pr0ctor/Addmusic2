//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Addmusic2.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Addmusic2.Localization.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make free space finding more aggressive..
        /// </summary>
        internal static string CLArgAggressiveFreeSpaceDescription {
            get {
                return ResourceManager.GetString("CLArgAggressiveFreeSpaceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aggresive Free Space.
        /// </summary>
        internal static string CLArgAggressiveFreeSpaceName {
            get {
                return ResourceManager.GetString("CLArgAggressiveFreeSpaceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off allowing SA1 enabled features..
        /// </summary>
        internal static string CLArgAllowSA1Description {
            get {
                return ResourceManager.GetString("CLArgAllowSA1Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow SA1.
        /// </summary>
        internal static string CLArgAllowSA1Name {
            get {
                return ResourceManager.GetString("CLArgAllowSA1Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not attempt to save music data in bank 0x40 and above..
        /// </summary>
        internal static string CLArgBankStartDescription {
            get {
                return ResourceManager.GetString("CLArgBankStartDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bank Start.
        /// </summary>
        internal static string CLArgBankStartName {
            get {
                return ResourceManager.GetString("CLArgBankStartName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off echo buffer checking..
        /// </summary>
        internal static string CLArgCheckEchoDescription {
            get {
                return ResourceManager.GetString("CLArgCheckEchoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Echo.
        /// </summary>
        internal static string CLArgCheckEchoName {
            get {
                return ResourceManager.GetString("CLArgCheckEchoName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force off conversion from Addmusic 4.05 and AddmusicM.
        /// </summary>
        internal static string CLArgConvertOldAddmusicDescription {
            get {
                return ResourceManager.GetString("CLArgConvertOldAddmusicDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert.
        /// </summary>
        internal static string CLArgConvertOldAddmusicName {
            get {
                return ResourceManager.GetString("CLArgConvertOldAddmusicName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a patch, but do not patch it to the ROM..
        /// </summary>
        internal static string CLArgCreatePatchDescription {
            get {
                return ResourceManager.GetString("CLArgCreatePatchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Patch.
        /// </summary>
        internal static string CLArgCreatePatchName {
            get {
                return ResourceManager.GetString("CLArgCreatePatchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump sound effects.
        /// </summary>
        internal static string CLArgDumpSoundEffectsDescription {
            get {
                return ResourceManager.GetString("CLArgDumpSoundEffectsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dump Sound Effects.
        /// </summary>
        internal static string CLArgDumpSoundEffectsName {
            get {
                return ResourceManager.GetString("CLArgDumpSoundEffectsName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off duplicate sample checking..
        /// </summary>
        internal static string CLArgDuplicateCheckingDescription {
            get {
                return ResourceManager.GetString("CLArgDuplicateCheckingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Checking.
        /// </summary>
        internal static string CLArgDuplicateCheckingName {
            get {
                return ResourceManager.GetString("CLArgDuplicateCheckingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only generate SPC files, no ROM required..
        /// </summary>
        internal static string CLArgGenerateSPCDescription {
            get {
                return ResourceManager.GetString("CLArgGenerateSPCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate SPC.
        /// </summary>
        internal static string CLArgGenerateSPCName {
            get {
                return ResourceManager.GetString("CLArgGenerateSPCName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists and shows help information for the various commands..
        /// </summary>
        internal static string CLArgHelpDescription {
            get {
                return ResourceManager.GetString("CLArgHelpDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string CLArgHelpName {
            get {
                return ResourceManager.GetString("CLArgHelpName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off hex command validation..
        /// </summary>
        internal static string CLArgHexValidationDescription {
            get {
                return ResourceManager.GetString("CLArgHexValidationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hex Validation.
        /// </summary>
        internal static string CLArgHexValidationName {
            get {
                return ResourceManager.GetString("CLArgHexValidationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn off Optimize Sample Usage..
        /// </summary>
        internal static string CLArgOptimizeSampleUsageDescription {
            get {
                return ResourceManager.GetString("CLArgOptimizeSampleUsageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimize Sample Usage.
        /// </summary>
        internal static string CLArgOptimizeSampleUsageName {
            get {
                return ResourceManager.GetString("CLArgOptimizeSampleUsageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes the first use notification..
        /// </summary>
        internal static string CLArgRemoveFirstUseDescription {
            get {
                return ResourceManager.GetString("CLArgRemoveFirstUseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove First Use Notification.
        /// </summary>
        internal static string CLArgRemoveFirstUseName {
            get {
                return ResourceManager.GetString("CLArgRemoveFirstUseName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Name of the ROM to modify..
        /// </summary>
        internal static string CLArgRomNameDescription {
            get {
                return ResourceManager.GetString("CLArgRomNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROM Name.
        /// </summary>
        internal static string CLArgRomNameName {
            get {
                return ResourceManager.GetString("CLArgRomNameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string CLArgStreamDirectDescription {
            get {
                return ResourceManager.GetString("CLArgStreamDirectDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string CLArgStreamDirectName {
            get {
                return ResourceManager.GetString("CLArgStreamDirectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn verbosity on.  More information will be displayed while using this..
        /// </summary>
        internal static string CLArgVerboseLoggingDescription {
            get {
                return ResourceManager.GetString("CLArgVerboseLoggingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verbose Logging.
        /// </summary>
        internal static string CLArgVerboseLoggingName {
            get {
                return ResourceManager.GetString("CLArgVerboseLoggingName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generates a visualization of the SPC..
        /// </summary>
        internal static string CLArgVisualizeSPCDescription {
            get {
                return ResourceManager.GetString("CLArgVisualizeSPCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visualize.
        /// </summary>
        internal static string CLArgVisualizeSPCName {
            get {
                return ResourceManager.GetString("CLArgVisualizeSPCName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempted to use a tempo ratio on a value that was already going to output a fractional value. Song - {0) , Line - {1:D} , Column - {2:D}.
        /// </summary>
        internal static string ErrorAlreadyFractionalTempoRatio {
            get {
                return ResourceManager.GetString("ErrorAlreadyFractionalTempoRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Default Length Command (&quot;l&quot;) value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorDefaultLengthOutOfRange {
            get {
                return ResourceManager.GetString("ErrorDefaultLengthOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected duplicate loop name {0} found in a loop definition. Names can only be used once..
        /// </summary>
        internal static string ErrorDuplicateLoopNameDefined {
            get {
                return ResourceManager.GetString("ErrorDuplicateLoopNameDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected duplicate Remote Code definition name {0} found in a loop definition. Names can only be used once..
        /// </summary>
        internal static string ErrorDuplicateRemoteCodeDefinitionNameDefined {
            get {
                return ResourceManager.GetString("ErrorDuplicateRemoteCodeDefinitionNameDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the tempo ratio on this value would result in a fractional value. Song - {0) , Line - {1:D} , Column - {2:D}.
        /// </summary>
        internal static string ErrorFractionalTempoRatio {
            get {
                return ResourceManager.GetString("ErrorFractionalTempoRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Global Volume Command (&quot;w&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorGlobalVolumeFadeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorGlobalVolumeFadeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Global Volume Command (&quot;w&quot;) volume value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorGlobalVolumeVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorGlobalVolumeVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal value ({0}) for Hex Command {1} found. Value must be between {2:D} and {3:D} ..
        /// </summary>
        internal static string ErrorHexCommandSuppliedValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorHexCommandSuppliedValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Hex Command value (${0}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorHexCommandValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorHexCommandValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing instrument definition. Hex value found (0x{0}) must be between 0x{1} and 0x{2} ..
        /// </summary>
        internal static string ErrorInstrumentDefinitionHexValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorInstrumentDefinitionHexValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing instrument definition; there were too few bytes following the sample (there must be 6)..
        /// </summary>
        internal static string ErrorInstrumentDefinitionMissingHexValues {
            get {
                return ResourceManager.GetString("ErrorInstrumentDefinitionMissingHexValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Instrument Command (&quot;@&quot;) instrument number value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorInstrumentValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorInstrumentValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Intro Directive (/) cannot be used within a loop..
        /// </summary>
        internal static string ErrorIntroDirectiveFoundInLoop {
            get {
                return ResourceManager.GetString("ErrorIntroDirectiveFoundInLoop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of named loops and remote code definitions reached..
        /// </summary>
        internal static string ErrorMaximumAllowedNumberOfLoopsReached {
            get {
                return ResourceManager.GetString("ErrorMaximumAllowedNumberOfLoopsReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Noise Command (&quot;n&quot;) value ({0:D}) found. Value must be in hex and between {1:D} and 0x{2:D} ..
        /// </summary>
        internal static string ErrorNoiseValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorNoiseValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Pan Command (&quot;y&quot;) direction value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorPanDirectionOutOfRange {
            get {
                return ResourceManager.GetString("ErrorPanDirectionOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Quantization Command (&quot;t&quot;) volume node..
        /// </summary>
        internal static string ErrorQuantizationVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorQuantizationVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Question Mark Command (&quot;?&quot;) value found. Value must be between 0-2..
        /// </summary>
        internal static string ErrorQuestionMarkValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorQuestionMarkValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sample Load Command tuning value (${0}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorSampleLoadTuningValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSampleLoadTuningValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sfx Instrument Command (&quot;@&quot;) instrument noise hex value ({0:D}) found. Value must be between {1:D} and 0x{2:D} ..
        /// </summary>
        internal static string ErrorSfxInstrumentNoiseHexValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSfxInstrumentNoiseHexValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sfx Instrument Command (&quot;@&quot;) instrument number value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorSfxInstrumentValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSfxInstrumentValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sfx Volume Command (&quot;v&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorSfxVolumeLeftVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSfxVolumeLeftVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sfx Volume Command (&quot;v&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorSfxVolumeRightVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSfxVolumeRightVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Sfx Volume Command (&quot;v&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorSfxVolumeVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorSfxVolumeVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing SPC length field.  Format must be m:ss or &apos;auto&apos;..
        /// </summary>
        internal static string ErrorSpcLengthInvalidValue {
            get {
                return ResourceManager.GetString("ErrorSpcLengthInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Songs longer than 16:39 are not allowed by the SPC format..
        /// </summary>
        internal static string ErrorSpcLengthValueTooLong {
            get {
                return ResourceManager.GetString("ErrorSpcLengthValueTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Tempo Command (&quot;t&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorTempoFadeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorTempoFadeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the tempo ratio on this value would cause it to overflow. Song - {0) , Line - {1:D} , Column - {2:D}.
        /// </summary>
        internal static string ErrorTempoRatioValueOverflow {
            get {
                return ResourceManager.GetString("ErrorTempoRatioValueOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Tempo Command (&quot;t&quot;) tempo value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorTempoTempoValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorTempoTempoValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loop Call contains a named loop that has not been defined..
        /// </summary>
        internal static string ErrorUndefinedNamedLoopCall {
            get {
                return ResourceManager.GetString("ErrorUndefinedNamedLoopCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Code Call contains a remote code definition that has not been defined..
        /// </summary>
        internal static string ErrorUndefinedRemoteCodeCall {
            get {
                return ResourceManager.GetString("ErrorUndefinedRemoteCodeCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Hex Command (${0}) found..
        /// </summary>
        internal static string ErrorUnknownHexCommand {
            get {
                return ResourceManager.GetString("ErrorUnknownHexCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Vibrato Command (&quot;p&quot;) delay value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorVibratoDelayOutOfRange {
            get {
                return ResourceManager.GetString("ErrorVibratoDelayOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Vibrato Command (&quot;p&quot;) extent value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorVibratoExtentOutOfRange {
            get {
                return ResourceManager.GetString("ErrorVibratoExtentOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Vibrato Command (&quot;p&quot;) rate value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorVibratoRateOutOfRange {
            get {
                return ResourceManager.GetString("ErrorVibratoRateOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Volume Command (&quot;v&quot;) fade value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorVolumeFadeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorVolumeFadeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Illegal Volume Command (&quot;v&quot;) volume value ({0:D}) found. Value must be between {1:D} and {2:D} ..
        /// </summary>
        internal static string ErrorVolumeVolumeValueOutOfRange {
            get {
                return ResourceManager.GetString("ErrorVolumeVolumeValueOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to !noSFX is enabled in asm/UserDefines.asm, sound effects are not included.
        /// </summary>
        internal static string InfoSoundEffectsNotIncluded {
            get {
                return ResourceManager.GetString("InfoSoundEffectsNotIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total size of main program: {0}.
        /// </summary>
        internal static string InfoTotalSizeOfProgram {
            get {
                return ResourceManager.GetString("InfoTotalSizeOfProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total size of main program and all sound effects: {0}.
        /// </summary>
        internal static string InfoTotalSizeOfProgramWithSfx {
            get {
                return ResourceManager.GetString("InfoTotalSizeOfProgramWithSfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total space used by 1DF9 sound effects: {0}.
        /// </summary>
        internal static string InfoTotalSpaceUsedBy1DF9Sfx {
            get {
                return ResourceManager.GetString("InfoTotalSpaceUsedBy1DF9Sfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total space used by 1DFC sound effects: {0}.
        /// </summary>
        internal static string InfoTotalSpaceUsedBy1DFCSfx {
            get {
                return ResourceManager.GetString("InfoTotalSpaceUsedBy1DFCSfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total space used by all sound effects: {0}.
        /// </summary>
        internal static string InfoTotalSpaceUsedByAllSoundEffects {
            get {
                return ResourceManager.GetString("InfoTotalSpaceUsedByAllSoundEffects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addmusic Version.
        /// </summary>
        internal static string IntroAddmusicVersion {
            get {
                return ResourceManager.GetString("IntroAddmusicVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parser Version.
        /// </summary>
        internal static string IntroParserVersion {
            get {
                return ResourceManager.GetString("IntroParserVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protip: Be sure to read the readme! If there&apos;s an error or something doesn&apos;t\nseem right, it may have your answer!\n\n.
        /// </summary>
        internal static string IntroReadTheReadMe {
            get {
                return ResourceManager.GetString("IntroReadTheReadMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: This ROM was modified using a newer version {0} of AddmusicK. You can continue, but it is HIGHLY recommended that you upgrade AMK first..
        /// </summary>
        internal static string NotificationRomAmkDataVersionMismatch {
            get {
                return ResourceManager.GetString("NotificationRomAmkDataVersionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: The identifier for this ROM, &quot;{0}&quot;, could not be identified. It should be &quot;{1}&quot;. This either means that some other program has modified this area of your ROM, or your ROM is corrupted..
        /// </summary>
        internal static string NotificationRomAmkVersionCannotBeDetermined {
            get {
                return ResourceManager.GetString("NotificationRomAmkVersionCannotBeDetermined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: A default note length was used that is not divisible by 192 ticks, and thus results in a fractional tick value..
        /// </summary>
        internal static string WarningDefaultLengthValidation {
            get {
                return ResourceManager.GetString("WarningDefaultLengthValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tempo ratio resulted in a fractional value. Song - {0) , Line - {1:D} , Column - {2:D}.
        /// </summary>
        internal static string WarningFactionalTempoRatioValue {
            get {
                return ResourceManager.GetString("WarningFactionalTempoRatioValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: Adding {0:D} dots to this note results in a fractional tick value. Song - {1) , Line - {2:D} , Column - {3:D}.
        /// </summary>
        internal static string WarningFractionalTickValueFromDots {
            get {
                return ResourceManager.GetString("WarningFractionalTickValueFromDots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid loop iteration count. Number of iterations must be between 1-255..
        /// </summary>
        internal static string WarningLoopIterationOutOfRange {
            get {
                return ResourceManager.GetString("WarningLoopIterationOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sound driver build does not support sound effects due to the !noSFX flag being enabled in asm/UserDefines.asm, yet you requested to dump SFX. There will be no new SPC dumps of the sound effects since the data is not included by default, nor is the playback code for the sound effects..
        /// </summary>
        internal static string WarningNoSfxEnabledAndDumpSfx {
            get {
                return ResourceManager.GetString("WarningNoSfxEnabledAndDumpSfx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: A note length was used that is not divisible by {0:D} ticks, and thus results in a fractional tick value. Song - {1) , Line - {2:D} , Column - {3:D}.
        /// </summary>
        internal static string WarningNoteLengthFractionalTickValue {
            get {
                return ResourceManager.GetString("WarningNoteLengthFractionalTickValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The octave has been dropped too low..
        /// </summary>
        internal static string WarningOctaveDroppedTooLow1 {
            get {
                return ResourceManager.GetString("WarningOctaveDroppedTooLow1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The octave has been raised too high..
        /// </summary>
        internal static string WarningOctaveRaisedTooHigh {
            get {
                return ResourceManager.GetString("WarningOctaveRaisedTooHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; field was longer than the maximum length ({1}). Truncating to &quot;{2}&quot;..
        /// </summary>
        internal static string WarningSpcTextValueTooLong {
            get {
                return ResourceManager.GetString("WarningSpcTextValueTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: Adding this note to a triplet results in a fractional tick value. Song - {1) , Line - {2:D} , Column - {3:D}.
        /// </summary>
        internal static string WarningTripletFractionalTickValueFromDots {
            get {
                return ResourceManager.GetString("WarningTripletFractionalTickValueFromDots", resourceCulture);
            }
        }
    }
}
